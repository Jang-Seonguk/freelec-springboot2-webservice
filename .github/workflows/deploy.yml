name: Java CI with Gradle # Workflow 이름

on: # Workflow를 자동으로 트리거 하기 위한 이벤트
  push:
    branches: ["master"] # master 브랜치에서 동작

env:
  S3_BUCKET_NAME: webservice-bucket123


jobs: # 병렬로 실행되는 작업 단위, 여러 step으로 이루어짐
  build:
    runs-on: ubuntu-latest # 스크립트를 작동할 OS
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3 # 재사용 가능한 워크플로 파일의 위치 및 버전
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # ./gradlw 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # 프로젝트 build
      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      # 실제 필요한 파일 압축
      - name: Before deploy
        run: |
          mkdir -p before-deploy  # zip에 포함시킬 파일들을 담을 디렉토리 생성
          cp scripts/*.sh before-deploy/
          cp appspec.yml before-deploy/
          cp build/libs/*.jar before-deploy/
          cd before-deploy && zip -r before-deploy * # before-deploy로 이동 후 전체 압축
          cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
          mv before-deploy/before-deploy.zip deploy/freelec-springboot2-webservice.zip # deploy로 zip파일 이동
        shell: bash

      # 프로젝트 압축
#      - name: Make zip file
#        run: zip -r ./practice-deploy.zip .
#        shell: bash

      # AWS 권한 확인
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      # 압축한 프로젝트를 S3로 전송
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 deploy/freelec-springboot2-webservice.zip s3://$S3_BUCKET_NAME/freelec-springboot2-webservice.zip